##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	# root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;
	# python manage.py runserver 0.0.0.0:8000

	server_name 127.0.0.1;
 
  location / {
    root /home/learn-htmll/;
    index testLogin.html;
  }
  
  location ~* \.(eot|ttf|woff|woff2)$ {
    root /home/learn-htmll/;
    add_header Access-Control-Allow-Origin *;
    index testLogin.html;
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		# try_files $uri $uri/ =404;
	}

  location /admin {
    proxy_pass http://172.0.102.123:8000;
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		# try_files $uri $uri/ =404;
	}
 
  location /learn {
    set $CSRFTOKEN "";
    if ($http_cookie ~* "CSRFTOKEN=(.+?)(?=;|$)") {
        set $CSRFTOKEN "$1";
    }
		# proxy_set_header Host $http_host;
		# proxy_set_header X-Real-IP $remote_addr;
		# proxy_set_header REMOTE-HOST $remote_addr;
		# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-CSRFToken $CSRFTOKEN;
    proxy_set_header x-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $proxy_host;
    proxy_pass http://172.0.102.123:8000/learn;
    add_header Access-Control-Allow-Origin *;
	}
 
  location /resource {
    set $CSRFTOKEN "";
    if ($http_cookie ~* "CSRFTOKEN=(.+?)(?=;|$)") {
        set $CSRFTOKEN "$1";
    }
		# proxy_set_header Host $http_host;
		# proxy_set_header X-Real-IP $remote_addr;
		# proxy_set_header REMOTE-HOST $remote_addr;
		# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-CSRFToken $CSRFTOKEN;
    proxy_set_header x-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $proxy_host;
    proxy_pass http://172.0.102.123:8000/resource;
    add_header Access-Control-Allow-Origin *;
	}
 
  location /static {
    alias /home/learn-projectl/static/;
  }
  
  location /resources {
    alias /home/learn-htmll/resources/;
  }

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php7.0-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php7.0-fpm:
	#	fastcgi_pass unix:/run/php/php7.0-fpm.sock;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
